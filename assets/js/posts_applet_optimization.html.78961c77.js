"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[110],{6262:(t,e)=>{e.A=(t,e)=>{const a=t.__vccOpts||t;for(const[t,i]of e)a[t]=i;return a}},7018:(t,e,a)=>{a.r(e),a.d(e,{comp:()=>n,data:()=>o});var i=a(641);const p={},n=(0,a(6262).A)(p,[["render",function(t,e){return(0,i.uX)(),(0,i.CE)("div",null,e[0]||(e[0]=[(0,i.Fv)('<h1 id="说说提高微信小程序的应用速度的手段有哪些" tabindex="-1"><a class="header-anchor" href="#说说提高微信小程序的应用速度的手段有哪些"><span>说说提高微信小程序的应用速度的手段有哪些？</span></a></h1><figure><img src="https://static.vue-js.com/f606d530-3278-11ec-a752-75723a64e8f5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="一、是什么" tabindex="-1"><a class="header-anchor" href="#一、是什么"><span>一、是什么</span></a></h2><p>小程序启动会常常遇到如下图场景：</p><figure><img src="https://static.vue-js.com/03941230-3279-11ec-8e64-91fdec0f05a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这是因为，小程序首次启动前，微信会在小程序启动前为小程序准备好通用的运行环境，如运行中的线程和一些基础库的初始化</p><p>然后才开始进入启动状态，展示一个固定的启动界面，界面内包含小程序的图标、名称和加载提示图标。此时，微信会在背后完成几项工作：</p><ul><li>下载小程序代码包</li><li>加载小程序代码包</li><li>初始化小程序首页</li></ul><p>下载到的小程序代码包不是小程序的源代码，而是编译、压缩、打包之后的代码包</p><p>整体流程如下图：</p><figure><img src="https://static.vue-js.com/11c0ea90-3279-11ec-a752-75723a64e8f5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、手段" tabindex="-1"><a class="header-anchor" href="#二、手段"><span>二、手段</span></a></h2><p>围绕上图小程序的启动流程， 我们可以从加载、渲染两个纬度进行切入：</p><h3 id="加载" tabindex="-1"><a class="header-anchor" href="#加载"><span>加载</span></a></h3><p>提升体验最直接的方法是控制小程序包的大小，常见手段有如下：</p><ul><li><p>代码包的体积压缩可以通过勾选开发者工具中“上传代码时，压缩代码”选项</p></li><li><p>及时清理无用的代码和资源文件</p></li><li><p>减少资源包中的图片等资源的数量和大小（理论上除了小icon，其他图片资源从网络下载），图片资源压缩率有限</p></li></ul><p>并且可以采取分包加载的操作，将用户访问率高的页面放在主包里，将访问率低的页面放入子包里，按需加载</p><p>当用户点击到子包的目录时，还是有一个代码包下载的过程，这会感觉到明显的卡顿，所以子包也不建议拆的太大，当然我们可以采用子包预加载技术，并不需要等到用户点击到子包页面后在下载子包</p><figure><img src="https://static.vue-js.com/2034de10-3279-11ec-8e64-91fdec0f05a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="渲染" tabindex="-1"><a class="header-anchor" href="#渲染"><span>渲染</span></a></h3><p>关于微信小程序首屏渲染优化的手段如下：</p><ul><li>请求可以在页面onLoad就加载，不需要等页面ready后在异步请求数据</li><li>尽量减少不必要的https请求，可使用 getStorageSync() 及 setStorageSync() 方法将数据存储在本地</li><li>可以在前置页面将一些有用的字段带到当前页，进行首次渲染（列表页的某些数据--&gt; 详情页），没有数据的模块可以进行骨架屏的占位</li></ul><p>在微信小程序中，提高页面的多次渲染效率主要在于正确使用<code>setData</code>：</p><ul><li>不要过于频繁调用setData，应考虑将多次setData合并成一次setData调用</li><li>数据通信的性能与数据量正相关，因而如果有一些数据字段不在界面中展示且数据结构比较复杂或包含长字符串，则不应使用<code>setData</code>来设置这些数据</li><li>与界面渲染无关的数据最好不要设置在data中，可以考虑设置在page对象的其他字段下</li></ul><p>除此之外，对于一些独立的模块我们尽可能抽离出来，这是因为自定义组件的更新并不会影响页面上其他元素的更新</p><p>各个组件也将具有各自独立的逻辑空间。每个组件都分别拥有自己的独立的数据、<code>setData</code>调用</p><h2 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结"><span>三、总结</span></a></h2><p><strong>小程序启动加载性能</strong>：</p><ul><li>控制代码包的大小</li><li>分包加载</li><li>首屏体验（预请求，利用缓存，避免白屏，及时反馈</li></ul><p><strong>小程序渲染性能</strong>：</p><ul><li>避免不当的使用setData</li><li>使用自定义组件</li></ul><h3 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h3><ul><li><a href="https://juejin.cn/post/6969779451177484296" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6969779451177484296</a></li><li><a href="https://segmentfault.com/a/1190000008925450" target="_blank" rel="noopener noreferrer">https://segmentfault.com/a/1190000008925450</a></li><li><a href="https://juejin.cn/post/6844903638226173965" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903638226173965</a></li><li><a href="https://juejin.cn/post/6844903726939897869" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903726939897869</a></li></ul>',33)]))}]]),o=JSON.parse('{"path":"/posts/applet/optimization.html","title":"说说提高微信小程序的应用速度的手段有哪些？","lang":"zh-CN","frontmatter":{"date":"2025-05-22T00:00:00.000Z","category":["微信小程序"],"tag":["面试题"],"description":"说说提高微信小程序的应用速度的手段有哪些？ 一、是什么 小程序启动会常常遇到如下图场景： 这是因为，小程序首次启动前，微信会在小程序启动前为小程序准备好通用的运行环境，如运行中的线程和一些基础库的初始化 然后才开始进入启动状态，展示一个固定的启动界面，界面内包含小程序的图标、名称和加载提示图标。此时，微信会在背后完成几项工作： 下载小程序代码包 加载小...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说说提高微信小程序的应用速度的手段有哪些？\\",\\"image\\":[\\"https://static.vue-js.com/f606d530-3278-11ec-a752-75723a64e8f5.png\\",\\"https://static.vue-js.com/03941230-3279-11ec-8e64-91fdec0f05a1.png\\",\\"https://static.vue-js.com/11c0ea90-3279-11ec-a752-75723a64e8f5.png\\",\\"https://static.vue-js.com/2034de10-3279-11ec-8e64-91fdec0f05a1.png\\"],\\"datePublished\\":\\"2025-05-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-23T11:03:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"一次元\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/applet/optimization.html"}],["meta",{"property":"og:site_name","content":"一次元"}],["meta",{"property":"og:title","content":"说说提高微信小程序的应用速度的手段有哪些？"}],["meta",{"property":"og:description","content":"说说提高微信小程序的应用速度的手段有哪些？ 一、是什么 小程序启动会常常遇到如下图场景： 这是因为，小程序首次启动前，微信会在小程序启动前为小程序准备好通用的运行环境，如运行中的线程和一些基础库的初始化 然后才开始进入启动状态，展示一个固定的启动界面，界面内包含小程序的图标、名称和加载提示图标。此时，微信会在背后完成几项工作： 下载小程序代码包 加载小..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://static.vue-js.com/f606d530-3278-11ec-a752-75723a64e8f5.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-23T11:03:34.000Z"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:published_time","content":"2025-05-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-23T11:03:34.000Z"}]]},"git":{"createdTime":1747998214000,"updatedTime":1747998214000,"contributors":[{"name":"shenyuan","username":"shenyuan","email":"13618329369@163.com","commits":1,"url":"https://github.com/shenyuan"}]},"readingTime":{"minutes":3.23,"words":970},"filePathRelative":"posts/applet/optimization.md","excerpt":"\\n<figure><img src=\\"https://static.vue-js.com/f606d530-3278-11ec-a752-75723a64e8f5.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h2>一、是什么</h2>\\n<p>小程序启动会常常遇到如下图场景：</p>\\n<figure><img src=\\"https://static.vue-js.com/03941230-3279-11ec-8e64-91fdec0f05a1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}')}}]);
"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[378],{1350:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>n,data:()=>l});var e=a(641);const t={},n=(0,a(6262).A)(t,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="说说微信小程序的支付流程" tabindex="-1"><a class="header-anchor" href="#说说微信小程序的支付流程"><span>说说微信小程序的支付流程？</span></a></h1><figure><img src="https://static.vue-js.com/2266fff0-34a0-11ec-8e64-91fdec0f05a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言"><span>一、前言</span></a></h2><p>微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能</p><p>在小程序内可调用微信的<code>API</code>完成支付功能，方便、快捷</p><p>场景如下图所示：</p><figure><img src="https://static.vue-js.com/6e0cff40-34a0-11ec-a752-75723a64e8f5.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://static.vue-js.com/34864830-34a0-11ec-8e64-91fdec0f05a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>用户通过分享或扫描二维码进入商户小程序，用户选择购买，完成选购流程</li><li>调起微信支付控件，用户开始输入支付密码</li><li>密码验证通过，支付成功。商户后台得到支付成功的通知</li><li>返回商户小程序，显示购买成功</li><li>微信支付公众号下发支付凭证</li></ul><h2 id="二、流程" tabindex="-1"><a class="header-anchor" href="#二、流程"><span>二、流程</span></a></h2><p>以电商小程序为例</p><p>支付流程图如下所示：</p><figure><img src="https://static.vue-js.com/76b66780-34a0-11ec-8e64-91fdec0f05a1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>具体的做法：</p><ul><li>打开某小程序，点击直接下单</li><li>wx.login获取用户临时登录凭证code，发送到后端服务器换取openId</li><li>在下单时，小程序需要将购买的商品Id，商品数量，以及用户的openId传送到服务器</li><li>服务器在接收到商品Id、商品数量、openId后，生成服务期订单数据，同时经过一定的签名算法，向微信支付发送请求，获取预付单信息(prepay_id)，同时将获取的数据再次进行相应规则的签名，向小程序端响应必要的信息</li><li>小程序端在获取对应的参数后，调用wx.requestPayment()发起微信支付，唤醒支付工作台，进行支付</li><li>接下来的一些列操作都是由用户来操作的包括了微信支付密码，指纹等验证，确认支付之后执行鉴权调起支付</li><li>鉴权调起支付：在微信后台进行鉴权，微信后台直接返回给前端支付的结果，前端收到返回数据后对支付结果进行展示</li><li>推送支付结果：微信后台在给前端返回支付的结果后，也会向后台也返回一个支付结果，后台通过这个支付结果来更新订单的状态</li></ul><p>其中后端响应数据必要的信息则是<code>wx.requestPayment</code>方法所需要的参数，大致如下：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">wx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">requestPayment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 时间戳</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  timeStamp</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 随机字符串</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  nonceStr</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 统一下单接口返回的 prepay_id 参数值</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  package</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 签名类型</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  signType</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 签名</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  paySign</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 调用成功回调</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {},</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 失败回调</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  fail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {},</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 接口调用结束回调</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  complete</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {}</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数表如下所示：</p><figure><img src="https://files.mdnice.com/user/155/48efed1f-d67f-45a7-ab2c-89a6424fafa0.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="三、结束" tabindex="-1"><a class="header-anchor" href="#三、结束"><span>三、结束</span></a></h2><p>小程序支付和以往的网页、APP微信支付大同小异，可以说小程序的支付变得更加简洁，不需要设置支付目录、域名授权等操作</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h2><ul><li><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_8_0.shtml" target="_blank" rel="noopener noreferrer">https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_8_0.shtml</a></li><li><a href="https://juejin.cn/post/6844903895970349064" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903895970349064</a></li></ul>',23)]))}]]),l=JSON.parse('{"path":"/posts/applet/requestPayment.html","title":"说说微信小程序的支付流程？","lang":"zh-CN","frontmatter":{"date":"2025-05-22T00:00:00.000Z","category":["微信小程序"],"tag":["面试题"],"description":"说说微信小程序的支付流程？ 一、前言 微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能 在小程序内可调用微信的API完成支付功能，方便、快捷 场景如下图所示： 用户通过分享或扫描二维码进入商户小程序，用户选择购买，完成选购流程 调起微信支付控件，用户开始输入支付密码 密码验证通过，支付成功。商户后台得到支付成功的通知 返回商户小程序，显示...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"说说微信小程序的支付流程？\\",\\"image\\":[\\"https://static.vue-js.com/2266fff0-34a0-11ec-8e64-91fdec0f05a1.png\\",\\"https://static.vue-js.com/6e0cff40-34a0-11ec-a752-75723a64e8f5.png\\",\\"https://static.vue-js.com/34864830-34a0-11ec-8e64-91fdec0f05a1.png\\",\\"https://static.vue-js.com/76b66780-34a0-11ec-8e64-91fdec0f05a1.png\\",\\"https://files.mdnice.com/user/155/48efed1f-d67f-45a7-ab2c-89a6424fafa0.png\\"],\\"datePublished\\":\\"2025-05-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-23T11:03:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"一次元\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/applet/requestPayment.html"}],["meta",{"property":"og:site_name","content":"一次元"}],["meta",{"property":"og:title","content":"说说微信小程序的支付流程？"}],["meta",{"property":"og:description","content":"说说微信小程序的支付流程？ 一、前言 微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能 在小程序内可调用微信的API完成支付功能，方便、快捷 场景如下图所示： 用户通过分享或扫描二维码进入商户小程序，用户选择购买，完成选购流程 调起微信支付控件，用户开始输入支付密码 密码验证通过，支付成功。商户后台得到支付成功的通知 返回商户小程序，显示..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://static.vue-js.com/2266fff0-34a0-11ec-8e64-91fdec0f05a1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-23T11:03:34.000Z"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:published_time","content":"2025-05-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-23T11:03:34.000Z"}]]},"git":{"createdTime":1747998214000,"updatedTime":1747998214000,"contributors":[{"name":"shenyuan","username":"shenyuan","email":"13618329369@163.com","commits":1,"url":"https://github.com/shenyuan"}]},"readingTime":{"minutes":2.45,"words":736},"filePathRelative":"posts/applet/requestPayment.md","excerpt":"\\n<figure><img src=\\"https://static.vue-js.com/2266fff0-34a0-11ec-8e64-91fdec0f05a1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h2>一、前言</h2>\\n<p>微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能</p>\\n<p>在小程序内可调用微信的<code>API</code>完成支付功能，方便、快捷</p>\\n<p>场景如下图所示：</p>\\n<figure><img src=\\"https://static.vue-js.com/6e0cff40-34a0-11ec-a752-75723a64e8f5.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}')},6262:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}}}]);